// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: queries.sql

package db

import (
	"context"
)

const insertComment = `-- name: InsertComment :one
INSERT INTO Comments (created_at,text,post) values (?,?,?) RETURNING id, created_at, text, post
`

type InsertCommentParams struct {
	CreatedAt interface{}
	Text      string
	Post      string
}

// table: Comments
//
//	INSERT INTO Comments (created_at,text,post) values (?,?,?) RETURNING id, created_at, text, post
func (q *Queries) InsertComment(ctx context.Context, arg InsertCommentParams) (Comment, error) {
	row := q.db.QueryRowContext(ctx, insertComment, arg.CreatedAt, arg.Text, arg.Post)
	var i Comment
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.Text,
		&i.Post,
	)
	return i, err
}
