---
import Root from '@layouts/Root.astro'
import type { BlogDetails, BlogAstro } from '@/types'
import {
    shapeForRendering,
    extractMetadata,
    parseAuthorName,
} from '@/utils/parseMetadata'

import BlogPost from '@/components/BlogImageBoard.astro'

const natBlogs = await Astro.glob<BlogAstro>('/src/blog/**/b_*.astro').then((b) =>
    b
        .filter((b) => b.details.hidden !== true)
        .filter((b) => parseAuthorName(b.details.author, b.file) === 'natalie')
        .map((b, i) => shapeForRendering(extractMetadata(b), i))
)

const natMdxs = await Astro.glob<BlogDetails>('/src/blog/**/b_*.mdx').then((b) =>
    b
        .filter((b) => b.frontmatter.hidden !== true)
        .filter((b) => parseAuthorName(b.frontmatter.author, b.file) === 'natalie')
        .map((b, i) => shapeForRendering(extractMetadata(b), i))
)

const natRecents = [...natBlogs, ...natMdxs]
    .sort(
        (a, b) =>
            new Date(b.props.details.date).getTime() -
            new Date(a.props.details.date).getTime()
    )
    .slice(0, 10)
const nateBlogs = await Astro.glob<BlogAstro>('/src/blog/**/b_*.astro').then((b) =>
    b
        .filter((b) => b.details.hidden !== true)
        .filter((b) => parseAuthorName(b.details.author, b.file) === 'nathan')
        .map((b, i) => shapeForRendering(extractMetadata(b), i))
)

const nateMdxs = await Astro.glob<BlogDetails>('/src/blog/**/b_*.mdx').then((b) =>
    b
        .filter((b) => b.frontmatter.hidden !== true)
        .filter((b) => parseAuthorName(b.frontmatter.author, b.file) === 'nathan')
        .map((b, i) => shapeForRendering(extractMetadata(b), i))
)

const nateRecents = [...nateBlogs, ...nateMdxs]
    .sort(
        (a, b) =>
            new Date(b.props.details.date).getTime() -
            new Date(a.props.details.date).getTime()
    )
    .slice(0, 10)

const bothRecents = [...natRecents, ...nateRecents].sort(
    (a, b) =>
        new Date(b.props.details.date).getTime() -
        new Date(a.props.details.date).getTime()
)
---

<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Natzone</title>
        <style is:global>
            .term {
                font-size: 14px;
                background-color: #0c090a;
                color: #b3b8c3;
                width: 555px;
                border: solid 2px #1e1e1e;
                margin-left: auto;
                margin-right: auto;
                padding: 3px;
            }
            .user {
                color: #a47996;
                font-weight: bold;
            }
            #post {
                display: table;
                margin-top: 5px;
            }
            .media {
                width: 33%;
                padding: 2px 4px 2px 2px;
                float: left;
            }
            .term:hover {
                border: solid 2px #0c090a;
            }
            .links {
                text-decoration: none;
                color: #b3b8c3;
            }
            .links:hover {
                background-color: #b3b8c3;
                color: #0c090a;
            }
            .url {
                text-decoration: underline;
                color: #b3b8c3;
            }
            .url:hover {
                background-color: #b3b8c3;
                color: #0c090a;
            }
            a {
                text-decoration: none;
            }
            .bg {
                position: fixed;
                top: 50%;
                left: 50%;
                min-width: 100%;
                min-height: 100%;
                width: auto;
                height: auto;
                -webkit-transform: translateX(-50%) translateY(-50%);
                transform: translateX(-50%) translateY(-50%);
                overflow: hidden;
            }
            .controls {
                background-color: #0c090a !important;
                border: solid 2px #0c090a !important;
                text-decoration: none;
                color: #b3b8c3 !important;
                padding: 3px;
            }
            .controls:hover {
                background-color: #b3b8c3 !important;
                color: #0c090a !important;
                cursor: pointer;
            }
            html {
            background-image: url(/public/carpark.png);
                background-repeat: no-repeat;
                background-color: #1e1e1e;
                background-attachment: fixed;
                background-size: cover;
                background-position: center;
            }
            .greentext {
                color: #87b379;
            }
            .redtext {
                color: #a47996;
            }
        </style>
    </head>
    <body>
        {
            bothRecents.map((b) => {
                return <BlogPost details={b.props.details} />
            })
        }
    </body>
</html>
