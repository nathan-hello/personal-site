---
import type { GetStaticPaths } from 'astro'
import type { BlogDetails, BlogAstro } from '@/types'
import DefaultLayout from '@layouts/natalie/Root.astro'
import {
    shapeForRendering,
    extractMetadata,
    parseAuthorName,
} from '@/utils/parseMetadata'

export const getStaticPaths: GetStaticPaths = async () => {
    const blogs = await Astro.glob<BlogAstro>('/src/blog/**/*.astro').then((b) =>
        b
            .filter((b) => b.details.hidden !== true)
            .filter((b) => parseAuthorName(b.details.author, b.file) === 'natalie')
            .map((b, i) => shapeForRendering(extractMetadata(b), i))
    )

    const mdxs = await Astro.glob<BlogDetails>('/src/blog/**/*.mdx').then((b) =>
        b

            .filter((b) => b.frontmatter.hidden !== true)
            .filter((b) => parseAuthorName(b.frontmatter.author, b.file) === 'natalie')
            .map((b, i) => shapeForRendering(extractMetadata(b), i))
    )

    const c = [...blogs, ...mdxs]

    return c
}

const { Component, details } = Astro.props as any
---

{
    details.overrideLayout === true ? (
        <Component />
    ) : (
        <DefaultLayout details={details}>
            <Component />
        </DefaultLayout>
    )
}
