---
import type { GetStaticPaths } from 'astro'
import type { BlogPage, Frontmatter } from '@/types'
import Layout from '@layouts/nathan/Root.astro'
import Mdx from '@layouts/default/Mdx.astro'
import {
    parseAuthorName,
    parseAstroPostMetadata,
    parseMdxPostMetadata,
} from '@/utils/parseMetadata'

export const getStaticPaths: GetStaticPaths = async () => {
    const blogs = await Astro.glob<BlogPage>(
        '../../../blog/nathan/**/b_*.astro'
    )
    const blogParams = blogs
        .filter((b) => parseAuthorName(b.details.author, b.file) === 'nathan')
        .map((b) => parseAstroPostMetadata(b))

    const mdxs = await Astro.glob<Frontmatter>(
        '../../../blog/nathan/**/b_*.mdx'
    )
    const mdxParams = mdxs
        .filter(
            (b) => parseAuthorName(b.frontmatter.author, b.file) === 'nathan'
        )
        .map((m) => parseMdxPostMetadata(m))

    console.log([...blogParams, ...mdxParams])

    const x = [...blogParams, ...mdxParams]
    return x
}

const { type, Component, details } = Astro.props as any
---

{
    type === 'blog-astro' ? (
        details.overrideLayout === true ? (
            <Component />
        ) : (
            <Layout
                title={details.title}
                description={details.description}
                image={details.image}
                author={details.author}
            >
                <Component />
            </Layout>
        )
    ) : type === 'blog-markdown' ? (
        <Mdx
            title={details.title}
            description={details.description}
            image={details.image}
        >
            <Component />
        </Mdx>
    ) : (
        <div>No one should see this!</div>
    )
}
