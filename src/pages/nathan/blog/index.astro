---
import Layout from '@/layouts/default/Root.astro'
import type { BlogPage, Frontmatter } from '@/types'
import { parseAuthorName, parseDateString } from '@utils/parseMetadata'

let all: {
    href: string
    title: string
    date: Date
    image?: string
}[] = []
const blogs = await Astro.glob<BlogPage>('../../../blog/nathan/**/*.astro')
const mdxs = await Astro.glob<Frontmatter>('../../../blog/nathan/**/*.mdx')

blogs
    .filter((b) => parseAuthorName(b.details.author, b.file) === 'nathan')
    .map((b) => {
        const dateStr = parseDateString(b.details.date, b.file)
        let href
        if (b.details.overrideHref) {
            href = b.details.overrideHref
        } else {
            href = dateStr + '/' + encodeURIComponent(b.details.title)
        }
        all.push({
            title: b.details.title,
            date: new Date(b.details.date),
            href: href,
            image: b.details.image,
        })
    })

mdxs.filter(
    (b) => parseAuthorName(b.frontmatter.author, b.file) === 'nathan'
).map((m) => {
    const dateStr = parseDateString(m.frontmatter.date, m.file)
    let href
    if (m.frontmatter.overrideHref) {
        href = m.frontmatter.overrideHref
    } else {
        href = dateStr + '/' + encodeURIComponent(m.frontmatter.title)
    }

    all.push({
        image: m.frontmatter.image,
        href: href,
        date: new Date(m.frontmatter.date),
        title: m.frontmatter.title,
    })
})
---

<Layout>
  <div class="bg-gray-800 min-h-screen">
    <div class="flex flex-col p-10 gap-2">
    {
        all
            .sort((a, b) => b.date.valueOf() - a.date.valueOf())
            .map((a) => (
            <a class="bg-red-900 text-xl " href={a.href}>
            <div class="h-32 w-48">
                  {a.title}
            </div>
            </a>
            ))
    }
    {JSON.stringify(all ?? 'fdsa')}
  </div>
  </div>
</Layout>
