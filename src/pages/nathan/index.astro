---
import type { BlogDetails, BlogAstro } from '@/types'
import {
    shapeForRendering,
    extractMetadata,
    parseAuthorName,
} from '@/utils/parseMetadata'
import Layout from '@layouts/Root.astro'

const blogs = await Astro.glob<BlogAstro>('/src/blog/**/b_*.astro').then((b) =>
    b
        .filter((b) => parseAuthorName(b.details.author, b.file) === 'nathan')
        .map((b) => shapeForRendering(extractMetadata(b)))
)

const mdxs = await Astro.glob<BlogDetails>('/src/blog/**/b_*.mdx').then((b) =>
    b
        .filter((b) => parseAuthorName(b.frontmatter.author, b.file) === 'nathan')
        .map((b) => shapeForRendering(extractMetadata(b)))
)

const recents = [...blogs, ...mdxs]
    .sort(
        (a, b) =>
            new Date(b.props.details.date).getTime() -
            new Date(a.props.details.date).getTime()
    )
    .slice(0, 10)
---

<Layout>
    <div class="bg-gray-800 min-h-screen">
        <div class="flex flex-col p-10 gap-2">
            {
                recents.map((a) => (
                    <a class="bg-red-900 text-xl " href={a.params.slug}>
                        <div class="h-32 w-48">{a.props.details.title}</div>
                    </a>
                ))
            }
        </div>
    </div>
</Layout>
